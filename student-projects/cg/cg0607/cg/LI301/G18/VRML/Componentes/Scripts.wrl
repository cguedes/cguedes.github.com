#VRML V2.0 utf8

###### ScriptEstado
# Este script serve para guardar e alternar o estado entre verdadeiro e valso.
# O estado é alterado sempre que existe um evento de entrada com valor TRUE,
######

#EXTERNPROTO ScriptEstado[
#  eventIn  SFBool set_active
#	 eventOut SFBool on_changed
#  eventOut SFFloat value_changed
#  eventOut SFTime set_startTime
#  eventOut SFTime set_stopTime
#]"Scripts.wrl#ScriptEstado"

PROTO ScriptEstado[
  eventIn  SFBool set_active
	eventOut SFBool on_changed
  eventOut SFFloat value_changed
  eventOut SFTime set_startTime
  eventOut SFTime set_stopTime
]{
  Script {
	  field    SFBool on FALSE #guarda o estado
	  eventIn  SFBool set_active IS set_active #evento de entrada
	  eventOut SFBool on_changed IS on_changed #evento de saida
    eventOut SFFloat value_changed IS value_changed #evento de saida
    eventOut SFTime set_startTime IS set_startTime #evento de saida
    eventOut SFTime set_stopTime IS set_stopTime #evento de saida
	  # use 'javascript' on newer browsers
	  url "vrmlscript:
	  function set_active( b, tm ) {
		  // ignore button releases
		  if ( b == FALSE ) return;
      on = !on;
		  on_changed = on;
      value_changed = on ? 1 : 0 ;
      if(on == true)
        set_startTime = tm;
      else set_stopTime = tm;
	  }"
  }
}


###### Controlador
# Controlador é activo quando receber start a false (indica que o botao foi levantado)
######

#EXTERNPROTO	Controlador[
#	field	SFBool isOpen
	
#  eventIn	SFFloat set_fraction
#	eventOut SFFloat fraction_changed
#  eventIn SFBool start

#  eventOut SFBool	done
#]"Scripts.wrl#Controlador"

PROTO	Controlador[
	field	SFBool isOpen FALSE
	
  eventIn	SFFloat set_fraction
	eventOut SFFloat fraction_changed
  eventIn SFBool start

  eventOut SFBool	done
]{
	Script {
		field	SFBool isOpen IS isOpen
    eventIn SFBool start IS start
		eventIn	SFFloat	set_fraction IS set_fraction
		eventOut SFFloat fraction_changed IS fraction_changed
		eventOut SFBool	done IS	done
		url"javascript:
    function start( b ){
      if( b == true ) return;
      done = false;
    }
		function set_fraction( f ){
			fraction_changed = isOpen ? 1-f : f;
			if(f == 1){
				isOpen = !isOpen;
				done = true;
			}
		}"
	}
}



###### ControladorJanela
#
######


#EXTERNPROTO ControladorJanela[
#  field MFVec3f keyValue
#  eventIn SFTime set_startTime
#  eventOut SFVec3f set_translation
#  eventOut SFBool done
#]"Scripts.wrl#ControladorJanela"

PROTO ControladorJanela[
  field MFVec3f keyValue []
  eventIn SFTime set_startTime
  eventOut SFVec3f set_translation
  eventOut SFBool done
]{
  Group {
    children [
      DEF posInterpolador PositionInterpolator {
				key	[0 1]
				keyValue IS keyValue
				value_changed IS set_translation
			}
			DEF	clock TimeSensor {
				loop FALSE
				cycleInterval	2
			}
      DEF script Script {
        eventIn SFTime set_startTime IS set_startTime
        eventOut SFTime startTimer
        eventOut SFBool start
        url "vrmlscript:
        function set_startTime( t, bm ){
          if( bm == false ) return;
          start = new Boolean( false ); 
          startTimer = t;
        }
        "
        ROUTE script.startTimer TO clock.startTime
      }
      DEF	controlador Controlador	{
        done IS done
        ROUTE script.start TO controlador.start
        ROUTE clock.fraction_changed TO controlador.set_fraction
        ROUTE controlador.fraction_changed TO posInterpolador.set_fraction
			}
    ]
  }
}
