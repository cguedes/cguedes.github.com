#VRML V2.0 utf8

# Eixos em VRML
EXTERNPROTO eixos [] "eixos.wrl#eixos"
Transform {
  scale 0.25 0.25 0.25
  children eixos {}
}

PROTO braco
[		field SFColor preto 0 0 0
]
{
	Shape{
		geometry Extrusion { 
    		crossSection [
				0 0, 
				0.45 0, 
				0.45 0.05, 
				0 0.05,
				0 0
			]
    		spine [0 0 0, 0 0 0.10] 
    		scale [1 1]
    		beginCap TRUE
			endCap TRUE
    		ccw TRUE
    		convex TRUE
    		creaseAngle 0
			solid FALSE
		}
		appearance Appearance {
        	material Material { 
				diffuseColor IS	preto
			}
		}
	}
}

PROTO perna
[	
]
{
	Shape{
		geometry Extrusion { 
    		crossSection [
				0.20 0, 
				0 0.60, 
				0.40 0.60,
				0.20 0
			]
    		spine [0 0 0, 0 0 0.05] 
    		scale [1 1]
    		beginCap TRUE
			endCap TRUE
    		ccw TRUE
    		convex TRUE
    		creaseAngle 0
			solid FALSE
		}
		appearance Appearance {
        material Material { }
			texture ImageTexture { url "cadeira_textura.png" }
		}
	}
}

PROTO perna_fim
[		field SFColor preto 0 0 0
]
{
	Shape{
		geometry Extrusion { 
    		crossSection [
				0 0, 
				0.40 0, 
				0.20 -0.10,
				0 0
			]
    		spine [0 0 0, 0 0 0.06] 
    		scale [1 1]
    		beginCap TRUE
			endCap TRUE
    		ccw TRUE
    		convex TRUE
    		creaseAngle 0
			solid FALSE
		}
		appearance Appearance {
        	material Material { 
				diffuseColor IS	preto
			}
		}
	}
}

PROTO costas
[	
]
{
	Shape{
		geometry Extrusion { 
    		crossSection [
				0 0, 
				0.50 0, 
				0.50 0.85, 
				0 0.85,
				0 0
			]
    		spine [0 0 0, 0 0 0.15] 
    		scale [1 1]
    		beginCap TRUE
			endCap TRUE
    		ccw TRUE
    		convex TRUE
    		creaseAngle 0
			solid FALSE
		}
		appearance Appearance {
        material Material { }
			texture ImageTexture { url "cadeira_textura.png" }
		}
	}
}

PROTO Cadeira_final[]{
	Group{
		children[
			DEF assento Transform {
				translation	0.05 0.20 0.15
				rotation 1 0 0 -2.90
				children[
					DEF Touch TouchSensor {}
					Shape{
						geometry Extrusion { 
    						crossSection [
								0 0, 
								0.50 0, 
								0.50 0.50, 
								0 0.50,
								0 0
							]
    						spine [0 0 0, 0 0 0.15] 
    						scale [1 1]
    						beginCap TRUE
							endCap TRUE
	    					ccw TRUE
    						convex TRUE
    						creaseAngle 0
							solid FALSE
						}
						appearance Appearance {
       					material Material { }
							texture ImageTexture { url "cadeira_textura.png" }
						}
					}
				]
			}

			DEF cadeira_aux Group{
				children[
					Transform{
						translation	0.05 0.25 0
						children[
							Transform {
								translation	0 0.40 0
								rotation 0 1 0 -1.57
								children braco{ }
							}
							Transform {
								translation	0.60 0.40 0
								rotation 0 1 0 -1.57
								children braco{ }
							}
							Transform {
								translation	0 -0.25 0.40
								rotation 0 0 1 3.14
								children [
									Transform {
										rotation 0 1 0 1.57
										children perna{ }
									}
									Transform {
										translation	-0.55 0 0
										rotation 0 1 0 1.57
										children perna{ }
									}
								]
							}
							Transform {
								translation	0.005 -0.25 0
								rotation 0 1 0 -1.57
								children [
									Transform {
										children perna_fim{ }
									}		
									Transform {
										translation	0 0 -0.55
										children perna_fim{ }
									}
								]
							}
							Transform {
								translation	0 0 0.15
								rotation 1 0 0 3.14
								children costas{ }
							}
						]
					}
				]
			}

			DEF openChair TimeSensor {
				cycleInterval 2
				loop FALSE
				startTime 0
			}

			DEF openChair_oi OrientationInterpolator {
				key [0 1]
				keyValue [1 0 0 -2.90, 1 0 0 -1.57]
			}

			DEF closeChair TimeSensor {
				cycleInterval 2
				loop FALSE
				startTime 0
			}

			DEF closeChair_oi OrientationInterpolator {
				key [0 1]
				keyValue [1 0 0 -1.57, 1 0 0 -2.90]
			}

			DEF ToggleChair Script {
				field  SFBool  state FALSE  
				eventIn  SFTime toggle
				eventOut SFTime startClose
				eventOut SFTime startOpen
				url "javascript:
				function toggle(curtime) {
					state = !state;
					if (state) {
    					startOpen = curtime;
    					startClose = -1;
					}
					else{
    					startOpen = -1;
    					startClose = curtime;
					}
				}"
			}
		]
			ROUTE Touch.touchTime TO ToggleChair.toggle
			ROUTE ToggleChair.startClose TO closeChair.startTime
			ROUTE ToggleChair.startOpen TO openChair.startTime
			ROUTE openChair.fraction_changed TO openChair_oi.set_fraction
			ROUTE openChair_oi.value_changed TO assento.set_rotation
			ROUTE closeChair.fraction_changed	TO closeChair_oi.set_fraction
			ROUTE closeChair_oi.value_changed TO assento.set_rotation
	}
}

Cadeira_final {}