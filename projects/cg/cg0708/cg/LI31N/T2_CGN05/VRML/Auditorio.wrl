#VRML V2.0 utf8

EXTERNPROTO	Rodapes [
	exposedField SFVec3f translation
]
"Rodapes.wrl#Rodape"

EXTERNPROTO	Paredes [
	exposedField SFVec3f translation
	field SFNode CorParede
]
"Paredes.wrl#Paredes"

EXTERNPROTO	Chao [
	exposedField SFVec3f translation
]
"Chao.wrl#Chao"

EXTERNPROTO Tecto [
	field SFVec3f translation
	field SFNode appearance
	eventIn	SFBool acenderLuzes
]
"Tecto.wrl#Tecto"

EXTERNPROTO Janelas [
	field SFVec3f translation
]
"Janelas.wrl#Janelas"

EXTERNPROTO Mesa [
	field SFVec3f translation
	field SFRotation rotation
]
"Mesa.wrl#Mesa"

EXTERNPROTO Cadeira [field MFInt32 CadeirasNum]
"Cadeira.wrl#Cadeira"

EXTERNPROTO Tela [
	field SFVec3f translation
]
"Tela.wrl#Tela"

EXTERNPROTO Interruptor [
	eventOut SFBool	ligado
	field SFVec3f translation
]
"Interruptor.wrl#Interruptor"

EXTERNPROTO Projector [
	field SFVec3f translation
]
"Projector.wrl#Projector"


PROTO Auditorio [

]{
	# É neste transform que serão inseridos todos os itens assim como cadeiras e mesas que são criadas dinamicamente
	DEF Audit Transform {
		children [
			#Definição da cor da parede 
			DEF	CorParede Appearance {
				material Material {
				diffuseColor .52 .51 .45		   
					ambientIntensity .0567
					specularColor .76 .78 .54
					emissiveColor .28 .27 .24
					shininess .53
				} 
			}
			# Interruptor
			# Aqui acende-se as luzes dos candeeiros ou a luz direccional
			DEF acenderLuzes Interruptor	{
				translation	350 100 0
			}
			Chao {

			}
			Rodapes	{
				translation	0 0 600
			}
			Paredes	{
				translation	0 0 600
				CorParede USE CorParede
			}
			Janelas	{
				translation	0 0 628
			}
			DEF tecto Tecto {
				translation	0 310 0
				appearance USE CorParede
				#acenderLuzes IS acenderLuzes
				ROUTE acenderLuzes.ligado TO tecto.acenderLuzes
			}
			# Cadeiras
			# Script de criação das cadeira
			# É dado o primeiro ponto para a colocação da primeira sendo as outras colocadas de acordo com esta 
			DEF	CriarCadeiras Script	{
				# Nó onde são inseridas as cadeiras
						field SFNode addedObject USE Audit 
						field MFNode tempNode []
						field SFInt32 filas 10
						field SFInt32 colunasFilaImpar 7
						field SFInt32 colunasFilaPar 6
						field SFString str ""
						directOutput FALSE
						url	"vrmlscript:
							function initialize () {
						   // É necessário explicitar o protótipo para manter o isolamento do script em relação
						   // ás outras formas. Vem descrito na especificação	 
								str+= 'EXTERNPROTO Cadeira  [ field SFBool AsTwoArms ] ';
								str+= ' \"Cadeira.wrl#Cadeira\" ';
								// Colocação de cadeiras de acordo com as filas
								for( var i = 0; i != filas; ++i) {
									var c = 0;
									var columns = 0;
									do{
										if( (i%2) == 0){
											// Numa fila par so existem 6 cadeiras
											columns = colunasFilaPar;
											str +=' Transform{ translation '+((i*89.5) + 495)+' '+ i*9.5 +' '
												+ ((c*56) + 158)+ ' children [ Cadeira { AsTwoArms '
												+ ((c == (columns - 1)) ?'TRUE':'FALSE') + ' } ] }';

										}
										else {
											// Numa fila impar existem 7 cadeiras
											columns = colunasFilaImpar;
											str +=' Transform{ translation '+((i*89.5) + 495)+' '+ i*9.5 +' '
												+ ((c*56) + 130)+ ' children [ Cadeira { AsTwoArms '
												+ ((c == (columns - 1)) ?'TRUE':'FALSE')+' } ] }';
										}
										c++;
									} while( c != columns ); 
								}										  
								// Browser cria os nos a serem inseridos fazendo parsing da string 
								tempNode = Browser.createVrmlFromString(str);
								// Inserção dos nós no objecto destino
								addedObject.addChildren = tempNode;										
							}

						"
			}
			# Mesas
			# Script de criação das mesas
			# É dado o primeiro ponto para a colocação da primeira sendo as outras colocadas de acordo com esta
			DEF	CriarMesas Script	{
				# Nó onde são inseridas as mesas
				field SFNode addedObject USE Audit 
				field MFNode tempNode []
				field SFString str ""
				field SFInt32 numMesas 5
				directOutput FALSE
				url	"vrmlscript:
					function initialize () {
						// É necessário explicitar o protótipo para manter o isolamento do script em relação
						// ás outras formas. Vem descrito na especificação	 
						str+= 'EXTERNPROTO Mesa [ field SFVec3f translation field SFRotation rotation ]';
						str+= ' \"Mesa.wrl#Mesa\" ';
						for( var i = 0; i != numMesas; ++i) {
							// Primeira mesa inserida em 180 0 220 as outras sao colocadas segundo o eixo dos ZZ
							// Com 80.1cm Cada mesa mede 80cm
							// 0.1 para n dar a noçao de que se trata de uma única mesa
							str +=' Mesa { translation 180 0 '+((i*80.1) + 220)+' rotation 0 1 0 3.14 }';
						}
						// Browser cria os nos a serem inseridos fazendo parsing da string										  
						tempNode = Browser.createVrmlFromString(str);
						// Inserção dos nós no objecto destino
						addedObject.addChildren = tempNode;										
					}

				"
			}
			Tela {
				translation	0 91 300
			}
			Projector {
				translation	350 300 300
			}
			# Luz - simulação do sol
			DEF dl DirectionalLight {	
				ambientIntensity .55
				color 1 1 1
				direction -.25 -.2 -.1
				intensity 0.50
				on TRUE
			}
			# Acender luzes de cena
			# Ou está a luz do sol acesa ou esta a dos candeeiros
			# Porgramação do funcionamento da luz solar
			DEF	acenderLuz Script {
				eventIn	SFBool acenderLuz
				eventOut SFBool	apagarLuz
				eventOut SFFloat diminuirIntensidade
				# Campo que tem de estar de acordo com o campo On da luz direccional
				field SFBool acesa TRUE
				field SFFloat pointl 1
				url	"vrmlscript:
				function acenderLuz( set, timestamp){
					acesa = !acesa;
					apagarLuz = acesa;
				}
				"
				# Ligação entre o interruptor e este script
				ROUTE acenderLuzes.ligado TO acenderLuz.acenderLuz
				# Ligação entre script e a direccional light
				# A ligação não pode ser directa pois quere-se que que esta luz tenha um funcionamento
				# contrário ao accionamento do interruptor
				ROUTE acenderLuz.apagarLuz TO dl.on
			}
		]
	}
}


NavigationInfo {
	avatarSize [0.25, 100, 25]
	headlight FALSE
	speed 30
	type ["WALK", "ANY"]
	visibilityLimit	0
}


Background {
skyAngle [ 0.24435 1.55334 3.14159 ]
skyColor [ 1.0 1.0 0.50196 0.0 0.0 1.0 1.0 1.0 1.0 0.0 0.0 1.0 ]
groundAngle [ 0.57596  1.57 ]
groundColor [ 0.36863 0.36863 0.36863 0.0 0.0 1.0 1.0 1.0 1.0]
}

#Criação do auditório e suas vistas
Transform {
	children [
		Auditorio {
		}
		Viewpoint {
			description	"View Zero"
			orientation 0 1 0 3.14
			fieldOfView	0.785398
			position 210 150 -350
		}
		Viewpoint {
			description	"View One"
			orientation 0 1 0 1.57
			fieldOfView	0.785398
			position 1300 200 300
		}

		Viewpoint {
			description	"View Two"
			orientation 0 1 0 -1.57
			fieldOfView	0.785398
			position 10 150 300
		}
		Viewpoint {
			description	"View Three"
			orientation 0 1 0 .99
			fieldOfView	0.785398
			position 500 100 550
		}
		Viewpoint {
			description	"View Four"
			orientation 0 1 0 1.57
			fieldOfView	0.785398
			position 1314 200 600
		}
		Viewpoint {
			description	"View Five"
			orientation 0 1 0 1.78
			fieldOfView	0.785398
			position 1314 200 10
		}
		Viewpoint {
			description	"View Six"
			orientation .5 1.75 0 -2
			fieldOfView	0.785398
			position 10 305 30
		}
		Viewpoint {
			description	"View Seven"
			orientation 0 1 1 3.14
			fieldOfView	.785398
			position 650 310 300
		}
#		Viewpoint {
#			description	"View Eight"
#			orientation 0 1 1 3.14
#			fieldOfView	1.57
#			position 650 310 300
#		}
	]
}