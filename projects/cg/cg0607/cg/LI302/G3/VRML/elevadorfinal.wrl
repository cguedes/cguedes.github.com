#VRML V2.0 utf8

#VRML V2.0 utf8

																			   

NavigationInfo {headlight FALSE}

PointLight        
{   
   on TRUE
   ambientIntensity 1
   intensity 10
   color 0 0 0 
   attenuation 0 0.8 0
   location 0 0 0
   radius 100 
}

DirectionalLight 
{
 direction 0 0 -1
 on TRUE
 color 1 1 1
 intensity 0.5
 ambientIntensity 1
}

DirectionalLight 
{
 direction 0 -1 0
 on TRUE
 color 1 1 1
 intensity 0.5
 ambientIntensity 1
}

DirectionalLight 
{
 direction -1 0 0
 on TRUE
 color 1 1 1
 intensity 0.5
 ambientIntensity 1
}

DirectionalLight 
{
 direction 1 0 0
 on TRUE
 color 1 1 1
 intensity 0.5
 ambientIntensity 1
}




PROTO elevador [] 
{ # Desenho do cubo
	Shape 
	{
		appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            	}
		}	

		geometry IndexedFaceSet 
		{
			
    		coord Coordinate 
			{ 
				point 
				[ # vrtices do cubo
            		1  1  1,  1 -1  1, -1 -1  1, -1  1  1,
            		1  1 -1,  1 -1 -1, -1 -1 -1, -1  1 -1
        		]
			}
    		coordIndex 
			[ # Faces do cubo
								2 3 7 6 -1, 0 1 5 4 -1, # plano ZY
								0 4 7 3 -1, 1 2 6 5 -1, # plano ZX 
							    4 5 6 7 -1, # plano XY 
    		]

			texCoord TextureCoordinate 
			{
				point 
				[#vrtices do cubo
				0 0, 0 1, 1 0, 1 1									
									]
			}
			texCoordIndex 
			[#Faces do cubo
							2 1 3 0 -1
			]
		
    		color Color {color [ 0.5 0.5 0.5 ] }
    		colorPerVertex   FALSE
    		colorIndex  
			[ 
        		0,0, 0, 0,0, -1 
    		]
			solid FALSE
			 
		}
		
	 }
}


PROTO Cube [field SFColor cubeColor 0.5 0.5 0.5]
{
	Shape 
	{
		appearance Appearance {  # define a aparncia do Shape (elevador)
				material Material {
		        diffuseColor IS	cubeColor # r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
		geometry Box {}
	}
	
}

Group 
				{
					children
    				[
						Transform
						{
							translation	0.8 0 2.1
							scale 0.1 0.1 0.1
							children 
							[
								Shape 
								{
    								geometry Box { }  #Boto de fora do elevador
    								appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
   							}
	
    							DEF TS TouchSensor { }  # gerar notificaes ao clique na Box
							]

						}
					]
				}

Group 
				{
					children
    				[
						Transform
						{
							translation	0.8 5 2.1
							scale 0.1 0.1 0.1
							children 
							[
								Shape 
								{
    								geometry Box { }  #Boto de fora do elevador
    								appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
   							}
	
    							DEF TS1 TouchSensor { }  # gerar notificaes ao clique na Box
							]

						}
					]
				}

Group 
				{
					children
    				[
						Transform
						{
							translation	0.8 -5 2.1
							scale 0.1 0.1 0.1
							children 
							[
								Shape 
								{
    								geometry Box { }  #Boto de fora do elevador
    								appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
   							}
	
    							DEF TS-1 TouchSensor { }  # gerar notificaes ao clique na Box
							]

						}
					]
				}




PROTO ExteriorA []
{
	Group
	{
		children
		[
			#ext cima
			Transform 
			{
				translation	0 1.8 1.3
				scale 1 0.2 0.1
				children Cube {cubeColor 0 0 0  }		
			}

			#ext direito
			Transform 
			{
				rotation 0 0 1 1.57
				translation	0.8 -0.2 1.3
				scale 1.8 0.2 0.1
				children Cube {cubeColor 0 0 0 }		
			}



			#ext esquerdo
			Transform 
			{
				rotation 0 0 1 1.57
				translation	-0.8 -0.2 1.3
				scale 1.8 0.2 0.1
				children Cube {cubeColor 0 0 0}		
			}
		
			#parede de baixo	
			Transform	
			{
				translation	0 -2 1.3
				scale	1 0.5 0.1
				children	Cube	{cubeColor	 0 0 1 }
			}														


			#parede de cima	
			Transform	
			{
				translation	0 2 1.3
				scale	1 0.5 0.1
				children	Cube	{cubeColor	0 0 1 }
			}										
		]
	}
}






DEF	Floors Transform
{
	translation	0,0,0.40
	children
	[
DEF ElevadorComp3 Transform
{
	translation	0,0,0
	children	
	[
		Transform
		{
				translation	0,0,0

			children 
			[

				#exterior
				Transform
				{
					translation	0 0 0.2
					children ExteriorA{}
				}


				DEF	PortaD2 Transform
				{
					scale 0.5 2 0.1
					translation	0.5 0 1.3  
					children Cube{}
				}

				DEF	PortaE2 Transform
				{
					scale 0.5 2 0.1
					translation	-0.5 0 1.3  
					children Cube{}
				}

			]
		}
	]
}


DEF ElevadorComp0 Transform
{
	translation	0,-5,0
	children	
	[
		Transform
		{
				translation	0,0,0

			children 
			[

				#exterior
				Transform
				{
					translation	0 0 0.2
					children ExteriorA{}
				}


				DEF	PortaD0 Transform
				{
					scale 0.5 2 0.1
					translation	0.5 0 1.3  
					children Cube{}
				}

				DEF	PortaE0 Transform
				{
					scale 0.5 2 0.1
					translation	-0.5 0 1.3  
					children Cube{}
				}

			]
		}
	]
}



DEF ElevadorComp1 Transform
{
	translation	0,5,0
	children	
	[
		Transform
		{
				translation	0,0,0

			children 
			[

				#exterior
				Transform
				{
					translation	0 0 0.2
					children ExteriorA{}
				}


				DEF	PortaD1 Transform
				{
					scale 0.5 2 0.1
					translation	0.5 0 1.3  
					children Cube{}
				}

				DEF	PortaE1 Transform
				{
					scale 0.5 2 0.1
					translation	-0.5 0 1.3  
					children Cube{}
				}

			]
		}
	]
}
#mostrador 0

DEF	Mostrador Transform
{
	scale 0.2 0.2 0.05
	translation	0 1.75 1.6  
	children Cube{cubeColor 0 0 0}
}

DEF FloorIndicatorNumbers Transform 
{
	children	DEF FloorIndicatorNumberSwitch Switch 
	{
		whichChoice	1
		choice	
		[
			DEF Number1 Transform 
			{
				children	DEF NumberShape1 Shape 
				{
				    appearance	DEF NumberApp Appearance 
					{
				    	material	Material 
						{
							emissiveColor	0 0 0 
				    	}
						texture	NULL
					    textureTransform	NULL

				    }

				    geometry	Text 
					{
				    	string	"-1"
				    	fontStyle	DEF NumberFont_19 FontStyle 
						{
							size	12
							family	"SANS"
							style	"BOLD"
							spacing	1
				    	}
						length	0
					}

				}

				translation	-0.04 1.7 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	-0.0104661 0.99985 -0.0137781  1.57099
			}
			DEF Number2 Transform 
			{
				children	DEF NumberShape2 Shape
	    		{
					appearance	USE NumberApp
					geometry	Text 
					{
				    	string	[ "0"," " ]
				    	fontStyle	USE NumberFont_19
						length	0
					}

				}
				
				translation	-0.04 1.7 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	1.2373e-08 1 -1.69587e-08  2.35619
			}
			DEF Number3 Transform 
			{
				children	DEF NumberShape3 Shape
	    		{
					appearance	USE NumberApp
					geometry	Text 
					{
						string	"1"
						fontStyle	USE NumberFont_19
						length	0
					}

				}

				translation	-0.04 1.7 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	1.98903e-08 1 1.05556e-08  2.35619
			}
				
		]
	}
}

DEF	Mostrador2 Transform
{
	scale 0.2 0.2 0.05
	translation	0 6.75 1.6  
	children Cube{cubeColor 0 0 0}
}

DEF FloorIndicatorNumbers2 Transform 
{
	children	DEF FloorIndicatorNumberSwitch2 Switch 
	{
		whichChoice	1
		choice	
		[
			DEF Number11 Transform 
			{
				children	DEF NumberShape11 Shape 
				{
				    appearance	DEF NumberApp1 Appearance 
					{
				    	material	Material 
						{
							emissiveColor	0 0 0 
				    	}
						texture	NULL
					    textureTransform	NULL

				    }

				    geometry	Text 
					{
				    	string	"-1"
				    	fontStyle	DEF NumberFont_191 FontStyle 
						{
							size	12
							family	"SANS"
							style	"BOLD"
							spacing	1
				    	}
						length	0
					}

				}

				translation	-0.04 6.7 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	-0.0104661 0.99985 -0.0137781  1.57099
			}
			DEF Number21 Transform 
			{
				children	DEF NumberShape21 Shape
	    		{
					appearance	USE NumberApp
					geometry	Text 
					{
				    	string	[ "0"," " ]
				    	fontStyle	USE NumberFont_19
						length	0
					}

				}
				
				translation	-0.04 6.7 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	1.2373e-08 1 -1.69587e-08  2.35619
			}
			DEF Number31 Transform 
			{
				children	DEF NumberShape31 Shape
	    		{
					appearance	USE NumberApp
					geometry	Text 
					{
						string	"1"
						fontStyle	USE NumberFont_19
						length	0
					}

				}

				translation	-0.04 6.7 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	1.98903e-08 1 1.05556e-08  2.35619
			}
				
		]
	}
}

DEF	Mostrador3 Transform
{
	scale 0.2 0.2 0.05
	translation	0 -3.20 1.6  
	children Cube{cubeColor 0 0 0}
}

DEF FloorIndicatorNumbers3 Transform 
{
	children	DEF FloorIndicatorNumberSwitch3 Switch 
	{
		whichChoice	1
		choice	
		[
			DEF Number13 Transform 
			{
				children	DEF NumberShape13 Shape 
				{
				    appearance	DEF NumberApp3 Appearance 
					{
				    	material	Material 
						{
							emissiveColor	0 0 0 
				    	}
						texture	NULL
					    textureTransform	NULL

				    }

				    geometry	Text 
					{
				    	string	"-1"
				    	fontStyle	DEF NumberFont_193 FontStyle 
						{
							size	12
							family	"SANS"
							style	"BOLD"
							spacing	1
				    	}
						length	0
					}

				}

				translation	-0.04 -3.25 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	-0.0104661 0.99985 -0.0137781  1.57099
			}
			DEF Number23 Transform 
			{
				children	DEF NumberShape23 Shape
	    		{
					appearance	USE NumberApp
					geometry	Text 
					{
				    	string	[ "0"," " ]
				    	fontStyle	USE NumberFont_19
						length	0
					}

				}
				
				translation	-0.04 -3.25 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	1.2373e-08 1 -1.69587e-08  2.35619
			}
			DEF Number33 Transform 
			{
				children	DEF NumberShape33 Shape
	    		{
					appearance	USE NumberApp
					geometry	Text 
					{
						string	"1"
						fontStyle	USE NumberFont_19
						length	0
					}

				}

				translation	-0.04 -3.25 1.65
				scale	0.0199999 0.02 0.0199999
				scaleOrientation	1.98903e-08 1 1.05556e-08  2.35619
			}
				
		]
	}
}

]
}

PROTO Pegas []
{
	Group
	{
		children
		[
			#pega tras
			Transform 
			{
				translation	0 0 -1.15
				scale 0.9 0.15 0.05
				children Cube {}		
			}

			#pega esquerda
			Transform 
			{
				rotation 0 1 0 1.57
				translation	-0.95 0 0
				scale 1.2 0.15 0.05
				children Cube {}		
			}

			#pega direita
			Transform 
			{
				rotation 0 1 0 1.57
				translation	0.95 0 0
				scale 1.2 0.15 0.05
				children Cube {}		
			}
		]
	}
}

PROTO Exterior []
{
	Group
	{
		children
		[
			#ext cima
			Transform 
			{
				translation	0 1.8 1.3
				scale 1 0.2 0.1
				children Cube {cubeColor 0 0 0  }		
			}

			#ext direito
			Transform 
			{
				rotation 0 0 1 1.57
				translation	0.8 -0.2 1.3
				scale 1.8 0.2 0.1
				children Cube {cubeColor 0 0 0 }		
			}

			#ext esquerdo
			Transform 
			{
				rotation 0 0 1 1.57
				translation	-0.8 -0.2 1.3
				scale 1.8 0.2 0.1
				children Cube {cubeColor 0 0 0}		
			}
			
								

		]
	}
}



DEF ElevadorComp Transform
{
	translation	0,0,0
	children	
	[
		Transform
		{
				translation	0,0,0

			children 
			[
				#exterior
				Transform
				{
					translation	0 0 0
					children Exterior{}
				}

				#pegas cima
				Transform
				{
					translation	0 -0.5 0
					children Pegas{}
				}

				#pegas baixo
				Transform
				{
					translation	0 -1.85 0
					children Pegas{}
				}

				#elevador
				Transform 
				{

					scale 1 2 1.2
					children elevador {}
					
				}

				DEF	PortaD Transform
				{
					scale 0.5 2 0.1
					translation	0.5 0 1.5  
					children Cube{}
				}

				DEF	PortaE Transform
				{
					scale 0.5 2 0.1
					translation	-0.5 0 1.5  
					children Cube{}
				}

				
			    
				Group 
				{
					children
    				[
						Transform
						{
							translation	-0.8 0 1.1
							scale 0.1 0.1 0.01
							children 
							[
								Shape 
								{
    								geometry Box { }   #Boto do interior do elevador
    								appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
    							}
	
    							DEF TS2 TouchSensor { }  # gerar notificaes ao clique na Box
							]

						}
					]
				}

				Group 
				{
					children
    				[
						Transform
						{
							translation	-1 0.4 0.9
							scale 0.001 0.05 0.05
							children 
							[
								Shape 
								{
    								geometry Box { }  #botao do andar 1
    								appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
    							}
	
    							DEF TSup01 TouchSensor { }  # gerar notificaes ao clique na Box
							]

						}
					]
				}

				Group 
				{
					children
    				[
						Transform
						{
							translation	-1 0.2 0.9
							scale 0.001 0.05 0.05
							children 
							[
								Shape 
								{
    								geometry Box { }		#Botao do andar 0
    								appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
    							}
	
    							DEF TSup10 TouchSensor { }  # gerar notificaes ao clique na Box
							]

						}
					]
				}

				Group 
				{
					children
    				[
						Transform
						{
							translation	-1 0 0.9
							scale 0.001 0.05 0.05
							children 
							[
								Shape 
								{
    								geometry Box { }	#Boto do andar -1
    								appearance Appearance {  # define a aparncia do Shape
				material Material {
		        diffuseColor 0.3 0.3 0.5	# r g b
				specularColor 0.7 0.7 0.8   # r g b
				ambientIntensity 0.10 # entre 0 e 1
		        shininess 0.08 # entre 0 e 1
            }
	}
    							}
	
    							DEF TSup0-1 TouchSensor { }  # gerar notificaes ao clique na Box
							]

						}
					]
				}



			]
		}
	]
}


DEF exterior Viewpoint
{
	orientation 0 0 1 0
	position 0 0 10 
	description "Exterior do elevador"
}

DEF insideElevator Viewpoint
{
	orientation 0 1 0 3.14
	position 0 1 0 
	description "Interior do elevador"
}

DEF insideElevator1 Viewpoint
{
	orientation 0 1 0 3.14
	position 0 5 0 
	description "Interior do elevador 1"
}

#elevator doors animation
DEF PosInterpolatorDopen PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [0.5 0 1.5, 0.75 0 1.5, 1 0 1.5, 1.25 0 1.5, 1.5 0 1.5]
}

DEF PosInterpolatorEopen PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-0.5 0 1.5, -0.75 0 1.5, -1 0 1.5, -1.25 0 1.5, -1.5 0 1.5]
}

DEF PosInterpolatorDclose PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [1.5 0 1.5, 1.25 0 1.5, 1 0 1.5, 0.75 0 1.5, 0.5 0 1.5]
}

DEF PosInterpolatorEclose PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-1.5 0 1.5, -1.25 0 1.5, -1 0 1.5, -0.75 0 1.5, -0.5 0 1.5]
}


#floor 1 animation
DEF PosInterpolatorDopen1 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [0.5 0 1.3, 0.75 0 1.3, 1 0 1.3, 1.25 0 1.3, 1.5 0 1.3]
}

DEF PosInterpolatorEopen1 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-0.5 0 1.3, -0.75 0 1.3, -1 0 1.3, -1.25 0 1.3, -1.5 0 1.3]
}

DEF PosInterpolatorDclose1 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [1.5 0 1.3, 1.25 0 1.3, 1 0 1.3, 0.75 0 1.3, 0.5 0 1.3]
}

DEF PosInterpolatorEclose1 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-1.5 0 1.3, -1.25 0 1.3, -1 0 1.3, -0.75 0 1.3, -0.5 0 1.3]
}


#floor 0 animation
DEF PosInterpolatorDopen2 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [0.5 0 1.3, 0.75 0 1.3, 1 0 1.3, 1.25 0 1.3, 1.5 0 1.3]
}

DEF PosInterpolatorEopen2 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-0.5 0 1.3, -0.75 0 1.3, -1 0 1.3, -1.25 0 1.3, -1.5 0 1.3]
}

DEF PosInterpolatorDclose2 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [1.5 0 1.3, 1.25 0 1.3, 1 0 1.3, 0.75 0 1.3, 0.5 0 1.3]
}

DEF PosInterpolatorEclose2 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-1.5 0 1.3, -1.25 0 1.3, -1 0 1.3, -0.75 0 1.3, -0.5 0 1.3]
}


#floor -1 animation
DEF PosInterpolatorDopen-1 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [0.5 0 1.3, 0.75 0 1.3, 1 0 1.3, 1.25 0 1.3, 1.5 0 1.3]
}

DEF PosInterpolatorEopen-1 PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-0.5 0 1.3, -0.75 0 1.3, -1 0 1.3, -1.25 0 1.3, -1.5 0 1.3]
}

DEF PosInterpolatorD-1close PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [1.5 0 1.3, 1.25 0 1.3, 1 0 1.3, 0.75 0 1.3, 0.5 0 1.3]
}

DEF PosInterpolatorE-1close PositionInterpolator 
{
  key      [0.0    0.25   0.5    0.75   1.0]
  keyValue [-1.5 0 1.3, -1.25 0 1.3, -1 0 1.3, -0.75 0 1.3, -0.5 0 1.3]
}

#Floor Timers Open

DEF Timer0O TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1.0
}
DEF Timer-1O TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1.0
}
DEF Timer1O TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1.0
}

#Floor Timers Close
DEF Timer0C TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1.0
}
DEF Timer-1C TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1.0
}
DEF Timer1C TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1.0
}

DEF Timer TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1.0
}

DEF TimerC TimeSensor 
{
  cycleInterval 6.0
  loop          FALSE
  startTime     -1
  
}

DEF TimerElev1 TimeSensor 
{
  cycleInterval 100.0
  loop          FALSE
  startTime     -1
  
}

DEF TimerElevCave TimeSensor 
{
  cycleInterval 100.0
  loop          FALSE
  startTime     -1
  
}

DEF TimerElev0 TimeSensor 
{
  cycleInterval 100.0
  loop          FALSE
  startTime     -1
  
}

#tempo ate fechar as portas

DEF	TimerCloseD TimeSensor 
{
  cycleInterval 10.0
  loop          FALSE
  startTime     -1
  
}

DEF	TimerCloseD1 TimeSensor 
{
  cycleInterval 10.0
  loop          FALSE
  startTime     -1
  
}  

DEF	TimerCloseD0 TimeSensor 
{
  cycleInterval 10.0
  loop          FALSE
  startTime     -1
  
} 

DEF	TimerCloseD-1 TimeSensor 
{
  cycleInterval 10.0
  loop          FALSE
  startTime     -1
  
}   

DEF	ElevatorAnim Script
{
	eventIn SFVec3f translacaoActual
	eventIn SFFloat doAnimation1
	eventIn SFFloat doAnimation0
	eventIn SFFloat doAnimationCave
	eventIn	SFTime startAnimation1
	eventIn	SFTime startAnimationCave
	eventIn	SFTime startAnimation0
	eventIn	SFFloat startCloseD
	eventIn	SFFloat startCloseD0
	eventIn	SFFloat startCloseD1
	eventIn	SFFloat startCloseD2
	eventIn	SFFloat isClosed
	eventIn	SFVec3f	pos
	eventIn SFFloat Open
	eventIn SFFloat Open0
	eventIn SFFloat Open1
	eventIn SFFloat Open2
	eventIn SFTime toggle
	eventIn	SFVec3f	floorViewer
	eventIn	SFTime	wichFloor
	eventOut SFTime	stopTimer
	eventOut SFTime	startTimer0
	eventOut SFTime	startTimerF0
	eventOut SFTime	startTimerF1
	eventOut SFTime	startTimerF2
	eventOut SFTime	startTimer
	eventOut SFTime	startTimerD0
	eventOut SFTime	startTimerD1
	eventOut SFTime	startTimerD2
	eventOut SFTime	startTimer2
	eventOut SFTime	startTimer3
	eventOut SFTime	startTimer4
	eventOut SFTime	startTimer5
	eventOut SFTime OpenDoor2
    eventOut SFTime OpenDoor0
    eventOut SFTime OpenDoor1 
	eventOut SFVec3f actualizacao
	eventOut SFTime startClose
    eventOut SFTime startOpen
	eventOut SFInt32 floorChanger
	eventOut SFTime	Timer0
	eventOut SFTime	Timer1
	eventOut SFTime	Timer2
    
	field SFFloat temp 0
	field SFFloat temp2 0
	field SFVec3f	aux 0 0 0
	field SFVec3f	aux2 0 0 0
	field SFFloat andar0 0.0
	field SFFloat cave -3.0
	field SFFloat interpolator 0.0
	field SFBool closed TRUE
	field SFBool  state FALSE
    field SFBool flag FALSE 
	field SFBool	down FALSE
   
	url "vrmlscript:
	function wichFloor (value, time)
	{
		
			if(interpolator == -5)
			{
				OpenDoor2 = time;
				closed = FALSE;
			}
			if(interpolator == 0)
			{
				OpenDoor0 = time;
				closed = FALSE;
			}
			if(interpolator == 5)
			{
				OpenDoor1 = time;
				closed = FALSE;
			}
		
	}

	function toggle(curtime) 
	{
		if(closed == TRUE)
		{
			startOpen = curtime;
    		startClose = -1;
			closed = FALSE;
		}
	}

	function isClosed(value, time)
	{
		if(value == 1)
		{
			closed = TRUE;
		}
		else
		{
			closed = FALSE;
		}
   	}
	
	function Open(value, time)
	{
		if((value == 1)&&(flag == FALSE))
		{
			closed = FALSE;
			startTimer4 = time;
		}
		else
		{
		}
	}

	function Open0(value, time)
	{
		if((value == 1)&&(flag == FALSE))
		{
			closed = FALSE;
			startTimerF0 = time;
		}
		else
		{
		}
	}

	function Open1(value, time)
	{
		if((value == 1)&&(flag == FALSE))
		{
			closed = FALSE;
			startTimerF1 = time;
		}
		else
		{
		}
	}

	function Open2(value, time)
	{
		if((value == 1)&&(flag == FALSE))
		{
			closed = FALSE;
			startTimerF2 = time;
		}
		else
		{
		}
	}
	
	function startCloseD(value, time)
	{
		if(value == 1)
		startTimer3 = time
	}

	function startCloseD1(value, time)
	{
		if(value == 1)
		startTimerD1 = time
	}

	function startCloseD0(value, time)
	{
		if(value == 1)
		startTimerD0 = time
	}

	function startCloseD2(value, time)
	{
		if(value == 1)
		startTimerD2 = time
	}
	
	function startAnimation1(value, time)
	{
		startTimer = time;
		aux2 = 0;
	}
	function startAnimationCave(value, time)
	{
		startTimer2 = time;
		aux2 = 0;
	}
	function startAnimation0(value, time)
	{
		startTimer0 = time;
		aux2 = 0;
	}

	function doAnimationCave(value, time)
	{
		if(closed == TRUE)
		{
			interpolator = interpolator - 0.01;
			if(interpolator < -5) 
			{
				stopTimer=time;
				Timer2 = time;
				interpolator = -5;
		 
			}

			actualizacao[1] = interpolator;
			
		}
		else
		{
		}
	}

	function floorViewer(value, time)
	{
	
		if(interpolator == -5)
		{
			floorChanger = 0;
		}
		if((interpolator >= -0.05)&&(interpolator <= 0.05))
		{
			floorChanger = 1;
		}
		if(interpolator == 5)
		{
			floorChanger = 2;
		}
	}

	function doAnimation1(value, time) 
	{
		   
		   if(closed == TRUE)
		   {
				
				interpolator = interpolator + 0.01;
				
				if(  interpolator > 5) 
				{
					stopTimer=time;
					interpolator = 5;
					Timer1 = time;
		 
				}

				actualizacao[1]=interpolator;
				
			}
			else
			{
//				portas abertas n anda para cima
			}
		
		
	}

	function doAnimation0(value, time)
	{
		if(closed == TRUE)
		{
			if(interpolator > 0.01)
			{
				interpolator = interpolator - 0.01;
				down = TRUE;
			}
			else if (interpolator < -0.01)
			{
				interpolator = interpolator + 0.01;
				down = FALSE;
			}
			else if((interpolator <= 0.01 )&&( interpolator >= -0.01 ))
			{
				interpolator = 0.0;
				stopTimer=time;
				Timer0 = time;
			}
			actualizacao[1]=interpolator;
		}
		else
		{
//			n faz nada pk as portas esto abertas
		}
	}



	 
	
 "
}


#botao do interior do elevador para abrir a porta
ROUTE TS2.touchTime	TO ElevatorAnim.wichFloor
ROUTE TS2.touchTime	TO ElevatorAnim.toggle
ROUTE ElevatorAnim.startOpen  TO Timer.startTime
ROUTE ElevatorAnim.OpenDoor0 TO	Timer0O.startTime
ROUTE ElevatorAnim.OpenDoor1 TO	Timer1O.startTime
ROUTE ElevatorAnim.OpenDoor2 TO	Timer-1O.startTime


#abrir portas e fecha-las ao fim de 4 seg


ROUTE TS.touchTime  TO ElevatorAnim.toggle
ROUTE TS.touchTime  TO Timer0O.startTime
ROUTE TS1.touchTime TO  Timer1O.startTime
ROUTE TS1.touchTime  TO ElevatorAnim.toggle
ROUTE TS-1.touchTime TO  Timer-1O.startTime
ROUTE TS-1.touchTime  TO ElevatorAnim.toggle

ROUTE ElevatorAnim.startClose TO TimerC.startTime
ROUTE ElevatorAnim.startOpen  TO Timer.startTime



#elevator Door
ROUTE Timer.fraction_changed	   TO PosInterpolatorDopen.set_fraction
ROUTE PosInterpolatorDopen.value_changed  TO PortaD.translation
ROUTE Timer.fraction_changed	   TO PosInterpolatorEopen.set_fraction
ROUTE PosInterpolatorEopen.value_changed  TO PortaE.translation

ROUTE Timer.fraction_changed  TO ElevatorAnim.Open
ROUTE ElevatorAnim.startTimer4 TO TimerCloseD.startTime
ROUTE TimerCloseD.fraction_changed TO ElevatorAnim.startCloseD
ROUTE ElevatorAnim.startTimer3 TO TimerC.startTime
ROUTE TimerC.fraction_changed   TO PosInterpolatorDclose.set_fraction
ROUTE PosInterpolatorDclose.value_changed TO PortaD.translation
ROUTE TimerC.fraction_changed   TO PosInterpolatorEclose.set_fraction
ROUTE TimerC.fraction_changed  TO ElevatorAnim.isClosed
ROUTE PosInterpolatorEclose.value_changed TO PortaE.translation

#abre porta de elevador e do andar respetivo
ROUTE ElevatorAnim.Timer0  TO Timer.startTime
ROUTE ElevatorAnim.Timer0  TO Timer0O.startTime
ROUTE ElevatorAnim.Timer1  TO Timer.startTime
ROUTE ElevatorAnim.Timer1  TO Timer1O.startTime
ROUTE ElevatorAnim.Timer2  TO Timer.startTime
ROUTE ElevatorAnim.Timer2  TO Timer-1O.startTime



#floor open Door 0
ROUTE Timer0O.fraction_changed	   TO PosInterpolatorDopen2.set_fraction
ROUTE PosInterpolatorDopen2.value_changed  TO PortaD2.translation
ROUTE Timer0O.fraction_changed	   TO PosInterpolatorEopen2.set_fraction
ROUTE PosInterpolatorEopen2.value_changed  TO PortaE2.translation

ROUTE Timer0O.fraction_changed  TO ElevatorAnim.Open0
ROUTE ElevatorAnim.startTimerF0 TO TimerCloseD0.startTime
ROUTE TimerCloseD0.fraction_changed TO ElevatorAnim.startCloseD0
ROUTE ElevatorAnim.startTimerD0 TO Timer0C.startTime
ROUTE Timer0C.fraction_changed   TO PosInterpolatorDclose2.set_fraction
ROUTE PosInterpolatorDclose2.value_changed TO PortaD2.translation
ROUTE Timer0C.fraction_changed   TO PosInterpolatorEclose2.set_fraction
ROUTE Timer0C.fraction_changed  TO ElevatorAnim.isClosed
ROUTE PosInterpolatorEclose2.value_changed TO PortaE2.translation

#floor open Door 1
ROUTE Timer1O.fraction_changed	   TO PosInterpolatorDopen1.set_fraction
ROUTE PosInterpolatorDopen1.value_changed  TO PortaD1.translation
ROUTE Timer1O.fraction_changed	   TO PosInterpolatorEopen1.set_fraction
ROUTE PosInterpolatorEopen1.value_changed  TO PortaE1.translation

ROUTE Timer1O.fraction_changed  TO ElevatorAnim.Open1
ROUTE ElevatorAnim.startTimerF1 TO TimerCloseD1.startTime
ROUTE TimerCloseD1.fraction_changed TO ElevatorAnim.startCloseD1
ROUTE ElevatorAnim.startTimerD1 TO Timer1C.startTime
ROUTE Timer1C.fraction_changed   TO PosInterpolatorDclose1.set_fraction
ROUTE PosInterpolatorDclose1.value_changed TO PortaD1.translation
ROUTE Timer1C.fraction_changed   TO PosInterpolatorEclose1.set_fraction
ROUTE Timer1C.fraction_changed  TO ElevatorAnim.isClosed
ROUTE PosInterpolatorEclose1.value_changed TO PortaE1.translation

#floor open Door -1
ROUTE Timer-1O.fraction_changed	   TO PosInterpolatorDopen-1.set_fraction
ROUTE PosInterpolatorDopen-1.value_changed  TO PortaD0.translation
ROUTE Timer-1O.fraction_changed	   TO PosInterpolatorEopen-1.set_fraction
ROUTE PosInterpolatorEopen-1.value_changed  TO PortaE0.translation

ROUTE Timer-1O.fraction_changed  TO ElevatorAnim.Open2
ROUTE ElevatorAnim.startTimerF2 TO TimerCloseD-1.startTime
ROUTE TimerCloseD-1.fraction_changed TO ElevatorAnim.startCloseD2
ROUTE ElevatorAnim.startTimerD2 TO Timer-1C.startTime
ROUTE Timer-1C.fraction_changed   TO PosInterpolatorD-1close.set_fraction
ROUTE PosInterpolatorD-1close.value_changed TO PortaD0.translation
ROUTE Timer-1C.fraction_changed   TO PosInterpolatorE-1close.set_fraction
ROUTE Timer-1C.fraction_changed  TO ElevatorAnim.isClosed
ROUTE PosInterpolatorE-1close.value_changed TO PortaE0.translation



#abrir portas do interior do elevador
#ROUTE TS2.touchTime                 TO ElevatorAnim.toggle
#ROUTE ElevatorAnim.startClose        TO TimerC.startTime
#ROUTE ElevatorAnim.startOpen         TO Timer.startTime
#ROUTE Timer.fraction_changed	   TO PosInterpolatorDopen.set_fraction
#ROUTE PosInterpolatorDopen.value_changed  TO PortaD.translation
#ROUTE Timer.fraction_changed	   TO PosInterpolatorEopen.set_fraction
#ROUTE PosInterpolatorEopen.value_changed  TO PortaE.translation
#ROUTE Timer.fraction_changed  TO ElevatorAnim.Open


#movimento para o 1 andar
ROUTE TSup01.touchTime TO ElevatorAnim.startAnimation1 
ROUTE ElevatorAnim.startTimer TO TimerElev1.startTime
ROUTE TimerElev1.fraction_changed TO ElevatorAnim.doAnimation1
ROUTE ElevatorAnim.actualizacao TO ElevadorComp.translation
ROUTE ElevatorAnim.actualizacao TO ElevatorAnim.floorViewer
ROUTE ElevatorAnim.floorChanger	TO FloorIndicatorNumberSwitch.whichChoice
ROUTE ElevatorAnim.stopTimer TO	TimerElev1.stopTime


#movimento para o -1 andar
ROUTE TSup0-1.touchTime TO ElevatorAnim.startAnimationCave 
ROUTE ElevatorAnim.startTimer2 TO TimerElevCave.startTime
ROUTE TimerElevCave.fraction_changed TO ElevatorAnim.doAnimationCave
ROUTE ElevatorAnim.actualizacao TO ElevadorComp.translation
ROUTE ElevatorAnim.actualizacao TO ElevatorAnim.floorViewer
ROUTE ElevatorAnim.floorChanger	TO FloorIndicatorNumberSwitch2.whichChoice
ROUTE ElevatorAnim.actualizacao TO ElevadorComp.translation
ROUTE ElevatorAnim.stopTimer TO	TimerElevCave.stopTime

#movimento para o andar	0
ROUTE TSup10.touchTime TO ElevatorAnim.startAnimation0 
ROUTE ElevatorAnim.startTimer0 TO TimerElev0.startTime
ROUTE TimerElev0.fraction_changed TO ElevatorAnim.doAnimation0
ROUTE ElevatorAnim.actualizacao TO ElevadorComp.translation
ROUTE ElevatorAnim.actualizacao TO ElevatorAnim.floorViewer
ROUTE ElevatorAnim.floorChanger	TO FloorIndicatorNumberSwitch3.whichChoice
ROUTE ElevatorAnim.actualizacao TO ElevadorComp.translation
ROUTE ElevatorAnim.stopTimer TO	TimerElev0.stopTime

				  







    





