#VRML V2.0 utf8

PROTO grid[]
{
	Transform 
	{
		children
		[
			Shape
			{
				geometry Box{size 0.02 0.04 0.8}
				appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
			}

			Shape
			{
				geometry Box {size 0.25 0.04 0.01}
				appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
			}

			Transform {
				translation 0 0 -0.05 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.05 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 -0.1 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.1 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 -0.15 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.15 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.2 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 -0.2 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 -0.25 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.25 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 -0.3 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.3 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 -0.35 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.35 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 -0.4 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

			Transform {
				translation 0 0 0.4 children 
					Shape
					{
						geometry Box {size 0.25 0.04 0.01}
						appearance Appearance {material Material {diffuseColor 0.9 0.9 0.9}}
					}
			}

		]
	}
}



PROTO base[]
{
	Transform 
	{
		children 
		[
			Shape{
				geometry Box {size 0.3 0.01 0.85}
				appearance Appearance {material Material {diffuseColor 1 1 1}}
			}

			Transform
			{
				rotation 1 0 0 1.57 translation -0.15 -0.055 0 children
				Shape{geometry Box{size 0.01 0.85 0.12} 
				appearance Appearance {material Material {diffuseColor 1 1 1}}
				}
			}

			Transform
			{
				rotation 1 0 0 1.57 translation 0.15 -0.055 0 children
				Shape{geometry Box{size 0.01 0.85 0.12} 
				appearance Appearance {material Material {diffuseColor 1 1 1}}
				}
			}

			Transform
			{
				rotation 0 1 0 1.57 translation 0 -0.055 -0.43 children
				Shape{geometry Box{size 0.01 0.12 0.31} 
				appearance Appearance {material Material {diffuseColor 1 1 1}}
				}
			}

			Transform
			{
				rotation 0 1 0 1.57 translation 0 -0.055 0.43 children
				Shape{geometry Box{size 0.01 0.12 0.31} 
				appearance Appearance {material Material {diffuseColor 1 1 1}}
				}
			}
		]
	}
}


PROTO Luzes[
	exposedField SFBool on FALSE 
	eventIn SFColor emissiveColor_changed
]{

	Group {
		children [
		DEF	LUZ DirectionalLight {
		   on IS on
		   color 0 1 0
		   direction 0 -1.57 0
		   intensity 2 
		   ambientIntensity	2
	   }				
	


		
			DEF	luz Transform{	

			rotation 1 0 0 1.57
			translation	-0.08 -0.025 0 children
		
			Shape
				{
					geometry Cylinder {height 0.82 radius 0.025}
					appearance Appearance {material DEF Lcolor Material {emissiveColor IS emissiveColor_changed }	 }
				}
			}
	
	]
}																 
}


			  

	Group {
		children [
			DEF	TS TouchSensor {}
						 
			Transform{
				translation	0 -0.5 0
				children
				[
					Shape
					{
						geometry Box
						{
							size 0.1 0 0.1
						}

					}
				]

			}
		]
	}


PROTO Candeeiro[
	exposedField SFBool on FALSE
]
{
	
	Transform
	{
		children 
		[
			base{}
			
			Luzes{ on IS on }
			
		Transform
		{
			translation	0 -0.1 0 children grid{}
		}
		Transform {
			translation	0.15 -0.025 0 children Luzes { on IS on}
		}
		
	
	]


	}
}

DEF	StateS Script {
	

	field SFBool state FALSE
	eventIn	SFBool Touch
	eventOut SFBool	state_changed
	eventOut SFColor color_changed

	url	"javascript:

	function Touch( val, timestamp){
		if(val==false) return;
		state=!state;
		state_changed=state;
	}
	  "
  }

 
 

 
 
 DEF C Candeeiro	{ on FALSE }
 
 

ROUTE TS.isActive TO StateS.Touch
ROUTE StateS.state_changed TO C.on
